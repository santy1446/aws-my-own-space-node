service: aws-my-own-space-node
frameworkVersion: '3'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:us-east-1:798753031733:table/NotesTable
        - arn:aws:dynamodb:us-east-1:798753031733:table/NotesTable/index/user_index
        - arn:aws:dynamodb:us-east-1:798753031733:table/ContactsTable
        - arn:aws:dynamodb:us-east-1:798753031733:table/ContactsTable/index/user_index
  httpApi:
    authorizers:
      appJwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_ClOoFhQj6
        audience:
          - 43kg19oplc27c8fj06etgokguq

functions:
  #Notes Endpoints
  addNote:
    handler: src/notes/addNote.addNote
    events:
      - httpApi:
          path: /notes
          method: post
          authorizer:
            name: appJwtAuthorizer
  getNotes:
    handler: src/notes/getNotes.getNotes
    events:
      - httpApi:
          path: /notes
          method: get
          authorizer:
            name: appJwtAuthorizer

  updateNote:
    handler: src/notes/updateNote.updateNote
    events:
      - httpApi:
          path: /notes/{id}
          method: put
          authorizer:
            name: appJwtAuthorizer

  deleteNote:
    handler: src/notes/deleteNote.deleteNote
    events:
      - httpApi:
          path: /notes/{id}
          method: delete
          authorizer:
            name: appJwtAuthorizer
  
  #Contacts Endpoints
  addContact:
    handler: src/contacts/addContact.addContact
    events:
      - httpApi:
          path: /contacts
          method: post
          authorizer:
            name: appJwtAuthorizer
  getContacts:
    handler: src/contacts/getContacts.getContacts
    events:
      - httpApi:
          path: /contacts
          method: get
          authorizer:
            name: appJwtAuthorizer
  updateContact:
    handler: src/contacts/updateContact.updateContact
    events:
      - httpApi:
          path: /contacts/{id}
          method: put
          authorizer:
            name: appJwtAuthorizer

  deleteContact:
    handler: src/contacts/deleteContact.deleteContact
    events:
      - httpApi:
          path: /contacts/{id}
          method: delete
          authorizer:
            name: appJwtAuthorizer

resources:
  Resources:
    #Notes Table
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema: # Required
          - AttributeName: id
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: user_index
            KeySchema: # Required
            - AttributeName: user_id
              KeyType: HASH
            - AttributeName: id
              KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: "NotesTable"
    #Contacts Table
    ContactsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema: # Required
          - AttributeName: id
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: user_index
            KeySchema: # Required
            - AttributeName: user_id
              KeyType: HASH
            - AttributeName: id
              KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: "ContactsTable"